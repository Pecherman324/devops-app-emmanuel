name: Security Pipeline - Simple

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Job 1: Análisis básico de seguridad
  code-security:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout código
      uses: actions/checkout@v4

    - name: Configurar Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Instalar dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Verificar archivos de configuración
      run: |
        echo "Verificando archivos de configuración..."
        if [ -f "Dockerfile" ]; then
          echo "✅ Dockerfile encontrado"
        else
          echo "❌ Dockerfile no encontrado"
          exit 1
        fi
        
        if [ -f "requirements.txt" ]; then
          echo "✅ requirements.txt encontrado"
        else
          echo "❌ requirements.txt no encontrado"
          exit 1
        fi
        
        if [ -f ".gitignore" ]; then
          echo "✅ .gitignore encontrado"
        else
          echo "❌ .gitignore no encontrado"
          exit 1
        fi

    - name: Verificar estructura del proyecto
      run: |
        echo "Verificando estructura del proyecto..."
        if [ -d "templates" ]; then
          echo "✅ Directorio templates encontrado"
        else
          echo "❌ Directorio templates no encontrado"
          exit 1
        fi
        
        if [ -f "templates/index.html" ]; then
          echo "✅ templates/index.html encontrado"
        else
          echo "❌ templates/index.html no encontrado"
          exit 1
        fi

  # Job 2: Pruebas de seguridad básicas
  security-tests:
    runs-on: ubuntu-latest
    needs: code-security
    steps:
    - name: Checkout código
      uses: actions/checkout@v4

    - name: Configurar Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Instalar dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Verificar endpoints de seguridad
      run: |
        python app.py &
        sleep 5
        
        # Verificar que el endpoint de health funciona
        if curl -f http://localhost:5000/api/health; then
          echo "✅ Endpoint /api/health funcionando"
        else
          echo "❌ Endpoint /api/health no funciona"
          exit 1
        fi
        
        # Verificar que el endpoint de info funciona
        if curl -f http://localhost:5000/api/info; then
          echo "✅ Endpoint /api/info funcionando"
        else
          echo "❌ Endpoint /api/info no funciona"
          exit 1
        fi
        
        pkill -f "python app.py" || true

  # Job 3: Verificación de Docker
  docker-security:
    runs-on: ubuntu-latest
    needs: code-security
    steps:
    - name: Checkout código
      uses: actions/checkout@v4

    - name: Verificar Dockerfile
      run: |
        echo "Verificando Dockerfile..."
        if [ -f "Dockerfile" ]; then
          echo "✅ Dockerfile existe"
          
          # Verificar que no ejecuta como root
          if grep -q "USER app" Dockerfile; then
            echo "✅ Dockerfile usa usuario no-root"
          else
            echo "⚠️ Dockerfile no especifica usuario no-root"
          fi
          
          # Verificar que expone el puerto correcto
          if grep -q "EXPOSE 5000" Dockerfile; then
            echo "✅ Dockerfile expone puerto 5000"
          else
            echo "❌ Dockerfile no expone puerto 5000"
            exit 1
          fi
        else
          echo "❌ Dockerfile no encontrado"
          exit 1
        fi

    - name: Build y test Docker
      run: |
        docker build -t devops-app-emmanuel:security-test .
        echo "✅ Imagen Docker construida"
        
        docker run -d -p 5000:5000 --name security-test devops-app-emmanuel:security-test
        sleep 10
        
        if curl -f http://localhost:5000/api/health; then
          echo "✅ Contenedor de seguridad funcionando"
        else
          echo "❌ Contenedor de seguridad no funciona"
          exit 1
        fi
        
        docker stop security-test || true
        docker rm security-test || true

  # Job 4: Reporte de seguridad
  security-report:
    runs-on: ubuntu-latest
    needs: [code-security, security-tests, docker-security]
    if: always()
    steps:
    - name: Generar reporte de seguridad
      run: |
        echo "# Reporte de Seguridad - DevOps App Emmanuel" > security-report.md
        echo "Fecha: $(date)" >> security-report.md
        echo "" >> security-report.md
        echo "## Resultados de Verificaciones" >> security-report.md
        echo "- Verificación de código: ${{ needs.code-security.result }}" >> security-report.md
        echo "- Pruebas de seguridad: ${{ needs.security-tests.result }}" >> security-report.md
        echo "- Seguridad Docker: ${{ needs.docker-security.result }}" >> security-report.md
        echo "" >> security-report.md
        echo "## Estado General" >> security-report.md
        if [ "${{ needs.code-security.result }}" == "success" ] && [ "${{ needs.security-tests.result }}" == "success" ] && [ "${{ needs.docker-security.result }}" == "success" ]; then
          echo "✅ Todas las verificaciones de seguridad pasaron" >> security-report.md
        else
          echo "⚠️ Algunas verificaciones de seguridad fallaron" >> security-report.md
        fi

    - name: Subir reporte
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: security-report.md

  # Job 5: Notificaciones
  security-notifications:
    runs-on: ubuntu-latest
    needs: [code-security, security-tests, docker-security]
    if: always()
    steps:
    - name: Notificar resultado de seguridad
      run: |
        if [ "${{ needs.code-security.result }}" == "success" ] && [ "${{ needs.security-tests.result }}" == "success" ] && [ "${{ needs.docker-security.result }}" == "success" ]; then
          echo "✅ Pipeline de seguridad completado exitosamente"
        else
          echo "⚠️ Pipeline de seguridad completado con advertencias"
        fi
